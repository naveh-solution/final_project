{"version":3,"sources":["Components/Nav-cp/Navbar.jsx","Components/painDiary-cp/PainDiaryComp.jsx","Components/painEventModal-cp/PainEventComp.jsx","Components/painEventModal-cp/PainEventModal.jsx","pages/DiarysPage/DiaryPage.jsx","Components/Login-cp/LoginComp.jsx","Components/cardHome-cp/CardComp.jsx","pages/HomePage/HomePage.jsx","model/UserModel.js","model/EventModel.js","Components/eventManageModal-cp/EventManageModalComp.jsx","pages/sign-upPage/SignUpPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavbarComp","userActive","logOut","setShowOrNot","Navbar","bg","expand","Container","Toggle","Collapse","id","Nav","className","Link","as","to","NavDropdown","title","Item","Button","onClick","disabled","Brand","href","PainDairyComp","events","setSelectedEvent","setManageShowOrNot","selectedEvent","setManageIndex","map","event","index","eventToModal","Col","eventDate","startT","endT","painLoc","painLevel","md","selfT","painTriger","physHelp","medHelp","otherHelp","variant","PainEventComp","PainEventModal","addEvent","show","onHide","React","useState","setPainLoc","setPainTriger","setStartT","setEventDate","setSelfT","envStatus","setEnvStatus","setPainLevel","useEffect","Modal","size","centered","Header","closeButton","Title","Body","Row","Form","Group","controlId","Label","Control","type","value","onChange","e","target","rows","Range","min","max","Footer","DairyPage","userActvie","console","log","LoginComp","users","login","email","setEmail","userPwd","setUserPwd","loginB","find","user","pwd","placeholder","Text","CardComp","Card","Img","src","HomePage","UserModel","justUser","this","fname","lname","cond","privelage","EventModel","plainEvent","nanoid","activeUId","EventManageModalComp","saveEvent","manageIndex","setEndT","setMedHelp","setPhysHelp","setOtherHelp","sm","SignUpPage","App","userData","setUserActive","showOrNot","manageShowOrNot","EventData","setEvents","userActiveEvents","filter","newEvent","concat","newEvents","exact","path","newUserActive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58b21913.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, NavDropdown, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NavbarComp({ userActive, logOut, setShowOrNot }) {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <NavDropdown title=\"Dairy\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item as={Link} to=\"/diarys\">All Events</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Button} onClick={() => setShowOrNot(true)} disabled={!userActive}>Create Event</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Link} to=\"/recommendation\">Recommendations</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link as={Link} to=\"/admin\">Admin</Nav.Link>\r\n                    </Nav>\r\n                    { userActive ? <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/\" onClick={logOut}>Log-Out</Nav.Link>\r\n                    </Nav></> : <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Log-In</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/sign-up\">Sign-Up</Nav.Link>\r\n                    </Nav></>}\r\n\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            <Navbar.Brand href=\"#/\">Pain dairy</Navbar.Brand>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default NavbarComp;","import React from 'react';\r\nimport { Col, Row, Button } from 'react-bootstrap';\r\nimport './painDiary.css'\r\n\r\n\r\n\r\n\r\nfunction PainDairyComp({ events, userActive, setShowOrNot, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n\r\n    // const [isSelected, setIsSelected] = React.useState(false)\r\n\r\n    // let inSelected\r\n\r\n    //function that get the selected event from the list and will open it in the modal for editing\r\n    function eventToModal(selectedEvent, index) {\r\n        setSelectedEvent(selectedEvent);\r\n        setManageIndex(index);\r\n    }\r\n\r\n    function manageClick() {\r\n        // setSelectedEvent(inSelected);\r\n        setManageShowOrNot(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {events.map((event, index) => <div className=\"mainDairyComp\" key={event.id} onClick={() => eventToModal(event, index)}>\r\n                <Col>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Day of Event:</h6>\r\n                        <p className=\"innerText\">{event.eventDate}</p>\r\n                        <h6>Start Time:</h6>\r\n                        <p>{event.startT}</p>\r\n                        {event.endT !== \"\" ? <><h6>End Time:</h6>\r\n                            <p>{event.endT}</p></> : null}\r\n                    </div>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Place of the Pain:</h6>\r\n                        <p>{event.painLoc}</p>\r\n                        <h6>Pain Level:</h6>\r\n                        <p>{event.painLevel}</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>Self Thoughts:</h6>\r\n                    <p>{event.selfT} </p>\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>Physical Trigger:</h6>\r\n                    <p>{event.painTriger}</p>\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>What Helped:</h6>\r\n                    <p> <span>{event.physHelp ? <>Physical: {event.physHelp} </> : null}</span> <span>{event.medHelp ? <>Meds:  {event.medHelp} </> : null}  </span>  <span>{event.otherHelp ? <> Other:  {event.otherHelp} </> : null}  </span></p>\r\n                </Col>\r\n            </div>)}\r\n            <div className=\"eventsBtns\">\r\n                <Button variant=\"success\" onClick={() => setShowOrNot(true)}>Create new Event</Button>\r\n                <Button variant=\"success\" disabled={!selectedEvent} onClick={() => manageClick()}>Manage Event</Button>\r\n                <Button variant=\"success\">Sheare Event</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PainDairyComp;","import React from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport './painEventComp.css'\r\n\r\n\r\nfunction PainEventComp({ currentTime, addEvent }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(currentTime);\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"eventDiv-cp\">\r\n            <Row>\r\n                <Col className=\"leftPenEvent\">\r\n                    <Form>\r\n                        <div className=\"mb-3 dateTimeRow\">\r\n\r\n                            <Form.Group as={Col} controlId=\"formPainEventStartT:\">\r\n                                <Form.Label>Date of Event</Form.Label>\r\n                                <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group as={Col} controlId=\"formPainEventStartT:\">\r\n                                <Form.Label>Start Time:</Form.Label>\r\n                                <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </div>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                            <Form.Label>Location of the Pain</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                            <Form.Label>Physical Trigger:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"rightPenEvent\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                            <Form.Label>Self Thoughts:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                            <Form.Label>Environment Status:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                <Row>\r\n                    <Button className=\"createBtn\" onClick={addEvent}>Create</Button>\r\n                </Row>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PainEventComp;","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport './painEventComp.css'\r\n\r\nfunction PainEventModal({ addEvent, show, onHide }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (show === false) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n        }\r\n    }, [show]);\r\n\r\n    const createEvent = () => {\r\n        const newEvn = {\r\n            eventDate,\r\n            startT,\r\n            endT: \"\",\r\n            painLoc,\r\n            painTriger,\r\n            painLevel,\r\n            selfT,\r\n            envStatus,\r\n            physHelp: \"\",\r\n            medHelp: \"\",\r\n            otherHelp: \"\"\r\n        }\r\n        addEvent(newEvn);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crate new Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row>\r\n                            <Col className=\"leftPenEvent\">\r\n                                <Form>\r\n                                    <div className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                  \r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                        <Form.Label>Level of the Pain</Form.Label>\r\n                                        <Form.Range min={1} max={10} value={painLevel} onChange={ e => setPainLevel(e.target.value)}></Form.Range>\r\n                                        <p className=\"painLevelText\">{painLevel}</p>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\">\r\n                                <Form>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"createBtn\" onClick={() => createEvent()}>Create Event</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PainEventModal;","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PainDairyComp from '../../Components/painDiary-cp/PainDiaryComp';\r\nimport { Footer } from 'react-bootstrap';\r\nimport PainEventComp from '../../Components/painEventModal-cp/PainEventComp';\r\nimport PainEventModal from '../../Components/painEventModal-cp/PainEventModal';\r\n\r\n\r\nfunction DairyPage({ userActvie, setShowOrNot, events, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n    console.log(userActvie)\r\n\r\n\r\n    if (!userActvie) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    console.log(events);\r\n\r\n    // const hours = new Date().getHours(); \r\n    // const min = new Date().getMinutes();\r\n    // const currentTime = hours + \":\" + min\r\n    // console.log(currentTime)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Diary Page</h1>\r\n            <PainDairyComp events={events} userActvie={userActvie} setShowOrNot={setShowOrNot}\r\n                setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} \r\n                selectedEvent={selectedEvent} setManageIndex={setManageIndex} />\r\n           \r\n           \r\n            <div className=\"buttom-nav nav\">\r\n            <Link to=\"/\">to Home Page</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DairyPage;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './loginComp.css';\r\n\r\nfunction LoginComp({ users, login }) {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [userPwd, setUserPwd] = React.useState(\"\");\r\n\r\n\r\n\r\n    function loginB() {\r\n        const userActive = users.find(user => user.email === email && user.pwd === userPwd)\r\n        if (userActive) {\r\n            login(userActive)\r\n        }\r\n        if (userActive) {\r\n            return <Redirect to=\"/diarys\" />\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-cp\">\r\n            <h4>Login to your Dairy</h4>\r\n            <p className=\"signupText\">or <Link to=\"/signup\">you can Signup here</Link> to start creating your own</p>\r\n            <Form>\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" className=\"textIn\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted emailText\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" className=\"textIn\" value={userPwd} onChange={(e) => setUserPwd(e.target.value)} />\r\n                </Form.Group>\r\n                <div className=\"loginSignup\">\r\n                    <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={loginB}>\r\n                        LOG-IN\r\n                    </Button> <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={loginB}>\r\n                        SIGN-UP\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComp;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './cardComp.css'\r\n\r\nfunction CardComp() {\r\n    return (\r\n        <div className=\"cardDiv\">\r\n            <Card>\r\n                <Card.Img variant=\"top\" src=\"https://image.flaticon.com/icons/png/512/387/387630.png\" />\r\n                <Card.Body>\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardComp;","import React from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport LoginComp from '../../Components/Login-cp/LoginComp';\r\nimport CardComp from '../../Components/cardHome-cp/CardComp';\r\nimport './homePage.css'\r\n\r\n\r\n\r\n\r\nfunction HomePage({users, login, userActive}) {\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"home-p\">\r\n            <h1>Pain Diary</h1>\r\n            <div className=\"cardsDiv\">\r\n                <CardComp/>\r\n                <CardComp/>\r\n                <CardComp/>\r\n            </div>\r\n            <div className=\"login-div\">\r\n            { !userActive ? <LoginComp  users={users} login={login} userActive={userActive}/> : null}  \r\n             </div>\r\n        </div>\r\n    )   \r\n    }\r\nexport default HomePage","class UserModel {\r\n    constructor (justUser){\r\n        this.id = justUser.id;\r\n        this.fname = justUser.fname;\r\n        this.lname = justUser.lname;\r\n        this.email = justUser.email; \r\n        this.pwd = justUser.pwd;\r\n        this.cond = justUser.cond;\r\n        this.privelage = justUser.privelage;\r\n    }\r\n}\r\n\r\nexport default UserModel","import {nanoid} from 'nanoid'\r\n\r\nclass EventModel{\r\n   \r\n  constructor (plainEvent) {\r\n        this.id = nanoid(6);\r\n        this.eventDate = plainEvent.eventDate;\r\n        this.startT = plainEvent.startT;\r\n        this.endT = plainEvent.endT;\r\n        this.painLoc = plainEvent.painLoc;\r\n        this.painTriger = plainEvent.painTriger;\r\n        this.painLevel = plainEvent.painLevel;\r\n        this.selfT = plainEvent.selfT;\r\n        this.envStatus = plainEvent.envStatus; \r\n        this.physHelp = plainEvent.physHelp;\r\n        this.medHelp = plainEvent.medHelp;\r\n        this.otherHelp = plainEvent.otherHelp;\r\n        this.activeUId = plainEvent.activeUId;\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default EventModel","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport './eventManageModalComp.css'\r\n\r\nfunction EventManageModalComp({ show, onHide, selectedEvent, saveEvent, manageIndex }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [endT, setEndT] = React.useState(\"\")\r\n    const [medHelp, setMedHelp] = React.useState(\"\")\r\n    const [physHelp, setPhysHelp] = React.useState(\"\")\r\n    const [otherHelp, setOtherHelp] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n       if(!show && !selectedEvent) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n            setEndT(\"\")\r\n            setMedHelp(\"\")\r\n            setPhysHelp(\"\")\r\n            setOtherHelp(\"\")\r\n            setPainLevel(\"1\")\r\n        }\r\n    }, [show]);\r\n\r\n    React.useEffect(() => {\r\n        if (selectedEvent) {\r\n            setPainLoc(selectedEvent.painLoc)\r\n            setPainTriger(selectedEvent.painTriger)\r\n            setStartT(selectedEvent.startT)\r\n            setEventDate(selectedEvent.eventDate)\r\n            setSelfT(selectedEvent.selfT)\r\n            setEnvStatus(selectedEvent.envStatus)\r\n            setEndT(selectedEvent.endT)\r\n            setMedHelp(selectedEvent.medHelp)\r\n            setPhysHelp(selectedEvent.physHelp)\r\n            setOtherHelp(selectedEvent.otherHelp)\r\n            setPainLevel(selectedEvent.painLevel)\r\n        }\r\n    }, [selectedEvent])\r\n\r\n    const createEvent = () => {\r\n        const newEvn = { \r\n            eventDate,\r\n            startT,\r\n            endT,\r\n            painLoc,\r\n            painTriger,\r\n            selfT,\r\n            envStatus, \r\n            physHelp,\r\n            medHelp,\r\n            otherHelp\r\n        }\r\n        saveEvent(newEvn, manageIndex);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"cont-for-adding_manage-event\">\r\n                        Manage Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row className=\"mainRowModal\">\r\n                            <Col className=\"leftPenEvent\" md={5}>\r\n                                <Form>\r\n                                    <Row className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} sm={4}controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={4} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={4} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>End Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={endT} onChange={e => setEndT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                        <Form.Label>Level of the Pain</Form.Label>\r\n                                        <Form.Range min={1} max={10} value={painLevel} onChange={ e => setPainLevel(e.target.value)}></Form.Range>\r\n                                        <p className=\"painLevelText\">{painLevel}</p>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\" md={6}>\r\n                                <Form>\r\n                                    <h4 className=\"rightPenTitle\">What HELPED</h4>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Medicines: </Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={medHelp} onChange={e => setMedHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Physical: <span className=\"note\">(e.g physicalTheropy ex)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={physHelp} onChange={e => setPhysHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Other: <span className=\"note\">(e.g Mentor, Psychologist etc.)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={otherHelp} onChange={e => setOtherHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"cancelBtn\" onClick={() => onHide()}>Cancel</Button>\r\n                    <Button className=\"createBtn\" onClick={() => createEvent()}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventManageModalComp;","import React from 'react';\r\n\r\nfunction SignUpPage() {\r\n    return (\r\n        <div className=\"signUpMain\">\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage","import React from 'react'\nimport { Switch, Route, HashRouter, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport NavbarComp from './Components/Nav-cp/Navbar';\nimport DairyPage from './pages/DiarysPage/DiaryPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport userData from './Data/UserData.json'\nimport UserModel from './model/UserModel';\nimport PainEventModal from './Components/painEventModal-cp/PainEventModal';\nimport EventData from './Data/EventData.json'\nimport EventModel from './model/EventModel.js'\nimport EventManageModalComp from './Components/eventManageModal-cp/EventManageModalComp';\nimport SignUpPage from './pages/sign-upPage/SignUpPage'\n\nfunction App() {\n\n  const [users, setUsers] = React.useState(userData.map(justUser => new UserModel(justUser)));\n  const [userActive, setUserActive] = React.useState(null);\n  const [showOrNot, setShowOrNot] = React.useState(false);\n  const [manageShowOrNot, setManageShowOrNot] = React.useState(false);\n  const [events, setEvents] = React.useState(EventData.map( plainEvent => new EventModel(plainEvent)))\n  const [selectedEvent, setSelectedEvent] = React.useState(null)\n const [manageIndex, setManageIndex] = React.useState(null)\n\n  const userActiveEvents = userActive ? events.filter(plainEvent => plainEvent.activeUId === userActive.id) : [] ;\n\n  function addEvent(newEvent) {\n    const activeUId = userActive ? userActive.id : null ;\n    newEvent.activeUId = activeUId;\n    newEvent = new EventModel(newEvent);\n    console.log(newEvent);\n    setEvents(events.concat(newEvent));\n    setShowOrNot(false);\n  }\n\n\n  const  saveEvent = (newEvent, index) => {\n\n    console.log(\"seve event\", index)\n    const activeUId = userActive ? userActive.id : null ;\n    newEvent.activeUId = activeUId;\n    const newEvents = [...events];\n    newEvents[index] = newEvent;\n    setManageShowOrNot(false);\n    setEvents(newEvents)\n    setSelectedEvent(\"\")\n    setManageIndex(\"\")\n  }\n\n  const handelCloseModal = () => {\n    setSelectedEvent(null)\n    setManageShowOrNot(false)\n}\n\n\n  function login(newUserActive) {\n    setUserActive(newUserActive);\n  }\n\n  function logOut() {\n    setUserActive(null)\n  }\n\n  return (\n    <HashRouter>\n      <NavbarComp  userActive={userActive} logOut={logOut} setShowOrNot={setShowOrNot}/>\n      <PainEventModal show={showOrNot} onHide={() => setShowOrNot(false)} addEvent={addEvent}  />\n      <EventManageModalComp show={manageShowOrNot} onHide={() => handelCloseModal()} selectedEvent={selectedEvent} saveEvent={saveEvent}  manageIndex={manageIndex}/>\n      <Switch>\n        <Route exact path=\"/\"><HomePage users={users} login={login} userActive={userActive}/></Route>\n        <Route exact path=\"/diarys\"><DairyPage userActvie={userActive} setShowOrNot={setShowOrNot} events={userActiveEvents} setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} selectedEvent={selectedEvent} setManageIndex={setManageIndex}/></Route>\n         <Route exact path=\"/sign-up\"><SignUpPage/> </Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}