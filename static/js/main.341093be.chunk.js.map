{"version":3,"sources":["Components/Nav-cp/Navbar.jsx","Components/painDiary-cp/PainDiaryComp.jsx","pages/DiarysPage/DiaryPage.jsx","Components/cardHome-cp/CardComp.jsx","pages/HomePage/HomePage.jsx","model/UserModel.js","Components/painEventModal-cp/PainEventModal.jsx","model/EventModel.js","Components/eventManageModal-cp/EventManageModalComp.jsx","Components/SignUp-cp/SignUpComp.jsx","pages/sign-upPage/SignUpPage.jsx","pages/AboutPage/AboutPage.jsx","pages/LoginPage/LoginPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavbarComp","userActive","logOut","setShowOrNot","Navbar","bg","expand","className","Container","Toggle","Collapse","id","Nav","Link","as","to","NavDropdown","title","Item","Button","onClick","disabled","Brand","href","PainDairyComp","events","setSelectedEvent","setManageShowOrNot","selectedEvent","setManageIndex","map","event","index","Row","eventToModal","Col","md","sm","eventDate","startT","endT","painLoc","painLevel","selfT","painTriger","physHelp","medHelp","otherHelp","ThemeProvider","prefixes","btn","variant","DairyPage","userActvie","console","log","CardComp","imgSrc","titel","text","animation","src","alt","HomePage","users","login","UserModel","justUser","this","fname","lname","email","gender","age","pwd","cond","privelage","PainEventModal","addEvent","show","onHide","React","useState","setPainLoc","setPainTriger","setStartT","setEventDate","setSelfT","envStatus","setEnvStatus","setPainLevel","useEffect","Modal","size","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","value","onChange","e","target","rows","Range","min","max","Footer","EventModel","plainEvent","nanoid","activeUId","EventManageModalComp","saveEvent","manageIndex","setEndT","setMedHelp","setPhysHelp","setOtherHelp","SignUpComp","addUser","setEmail","setPwd","setFname","setLname","setGender","setAge","setCond","placeholder","ButtonGroup","SignUpPage","AboutPage","LoginPage","userPwd","setUserPwd","Text","newUserActive","find","user","App","userData","setUsers","setUserActive","showOrNot","manageShowOrNot","EventData","setEvents","userActiveEvents","filter","newEvent","evnId","concat","newSaveEvent","newEvents","exact","path","newUser","uId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341093be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, NavDropdown, Button, ThemeProvider } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css'\r\n\r\nfunction NavbarComp({ userActive, logOut, setShowOrNot }) {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"md\" className=\"mainNav\">\r\n            <Container>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <NavDropdown title=\"Diary\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item as={Link} to=\"/diarys\">All Events</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Button} onClick={() => setShowOrNot(true)} disabled={!userActive}>Create Event</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Link} to=\"/recommendation\"  disabled={!userActive}>Recommendations</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                    </Nav>\r\n                    { userActive ? <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/\" onClick={logOut}>Log-Out</Nav.Link>\r\n                    </Nav></> : <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/log-in\">Log-In</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/sign-up\">Sign-Up</Nav.Link>\r\n                    </Nav></>}\r\n\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            <Navbar.Brand href=\"#/\">Pain diary</Navbar.Brand>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarComp;","import React from 'react';\r\nimport { Col, Row, Button, ThemeProvider } from 'react-bootstrap';\r\nimport './painDiary.css'\r\n\r\n\r\n\r\n\r\nfunction PainDairyComp({ events, userActive, setShowOrNot, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n\r\n\r\n    //function that get the selected event from the list and will open it in the modal for editing\r\n    function eventToModal(selectedEvent, index) {\r\n        setSelectedEvent(selectedEvent);\r\n        setManageIndex(index);\r\n    }\r\n\r\n    function manageClick() {\r\n        // setSelectedEvent(inSelected);\r\n        setManageShowOrNot(true);\r\n    }\r\n   \r\n    const selectedClass = \"\"\r\n\r\n    return (\r\n        <div>\r\n            {events.map((event, index) =>\r\n            <Row className={event === selectedEvent ? \"mainDairyComp selectedClass\" : \"mainDairyComp\"} key={event.id} onClick={() => eventToModal(event, index)}>\r\n                <Col md={5} sm={12}>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Day of Event:</h6>\r\n                        <p className=\"innerText\">{event.eventDate}</p>\r\n                        <h6>Start Time:</h6>\r\n                        <p>{event.startT}</p>\r\n                        {event.endT !== \"\" ? <><h6>End Time:</h6>\r\n                            <p>{event.endT}</p></> : null}\r\n                    </div>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Place of the Pain:</h6>\r\n                        <p>{event.painLoc}</p>\r\n                        <h6>Pain Level:</h6>\r\n                        <p>{event.painLevel}</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md={2} sm={12} className=\"painDcol\">\r\n                    <h6>Self Thoughts:</h6>\r\n                    <p>{event.selfT} </p>\r\n                </Col>\r\n                <Col md={2} sm={12} className=\"painDcol\">\r\n                    <h6>Physical Trigger:</h6>\r\n                    <p>{event.painTriger}</p>\r\n                </Col>\r\n                <Col md={2} sm={12} className=\"painDcol\">\r\n                    <h6>What Helped:</h6>\r\n                    <p> <span>{event.physHelp ? <>Physical: {event.physHelp} </> : null}</span> <span>{event.medHelp ? <>Meds:  {event.medHelp} </> : null}  </span>  <span>{event.otherHelp ? <> Other:  {event.otherHelp} </> : null}  </span></p>\r\n                </Col>\r\n            </Row>)}\r\n            <div className=\"eventsBtns\">\r\n            <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                <Button variant=\"success\" onClick={() => setShowOrNot(true)}>Create new Event</Button>\r\n                <Button variant=\"success\" disabled={!selectedEvent} onClick={() => manageClick()}>Manage Event</Button>\r\n                <Button variant=\"success\">Sheare Event</Button>\r\n                </ThemeProvider>{' '}\r\n            </div>\r\n        </div>\r\n            );\r\n}\r\n\r\nexport default PainDairyComp;","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PainDairyComp from '../../Components/painDiary-cp/PainDiaryComp';\r\nimport './diaryPage.css'\r\n\r\nfunction DairyPage({ userActvie, setShowOrNot, events, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n    console.log(userActvie)\r\n\r\n\r\n    // if (!userActvie) {\r\n    //     return <Redirect to=\"/\" />\r\n    // }\r\n\r\n    console.log(events);\r\n\r\n    if(!userActvie){\r\n      return   <Redirect to=\"/\"/>\r\n    }\r\n\r\n    // const hours = new Date().getHours(); \r\n    // const min = new Date().getMinutes();\r\n    // const currentTime = hours + \":\" + min\r\n    // console.log(currentTime)\r\n\r\n\r\n    return (\r\n        <div className=\"diaryMain-p\">\r\n            <h1>Diary Page</h1>\r\n            <PainDairyComp events={events} userActvie={userActvie} setShowOrNot={setShowOrNot}\r\n                setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} \r\n                selectedEvent={selectedEvent} setManageIndex={setManageIndex} />  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DairyPage;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport './cardComp.css'\r\n\r\nfunction CardComp({imgSrc, titel, text, animation}) {\r\n    return (\r\n        <div className={\"cardDiv\"+ \" \" + animation}>\r\n            <div className=\"cardImg\">\r\n            <img className=\"Img\" src={imgSrc} alt=\"headace\" />\r\n            </div>\r\n            <div className=\"cardTitel\">\r\n            <h5>{titel}</h5>\r\n            </div>\r\n            <div className=\"cardText\">\r\n            <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardComp;","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LoginComp from '../../Components/Login-cp/LoginComp';\r\nimport CardComp from '../../Components/cardHome-cp/CardComp';\r\nimport './homePage.css'\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nfunction HomePage({ users, login, userActive }) {\r\n\r\n\r\n    return (\r\n        <div className=\"home-p\">\r\n            <h1>Pain Diary</h1>\r\n            <Row className=\"cardsDiv\">\r\n                <Col md={3} className=\"colMd\">\r\n                    <CardComp imgSrc=\"https://static.thenounproject.com/png/3968708-200.png\" titel=\"Physical\"\r\n                        text=\"The physical pain is reale and you can feel it some where in your body\" />\r\n                </Col>\r\n                <Col md={3} className=\"colMd\">\r\n                    <CardComp imgSrc=\"https://image.flaticon.com/icons/png/128/2176/2176875.png\" titel=\"Psychological\"\r\n                        text=\"We are what we think our thogut affect our life\" />\r\n                </Col>\r\n                <Col md={3} className=\"colMd\">\r\n                    <CardComp imgSrc=\"https://image.flaticon.com/icons/png/128/2821/2821176.png\" titel=\"Environment\"\r\n                        text=\"How the Environment is reacting is part of what we think about our self\" />\r\n                </Col>\r\n            </Row>\r\n            {/* <div className=\"login-div\">\r\n                {!userActive ? <LoginComp users={users} login={login} userActive={userActive} /> : null}\r\n            </div> */}\r\n            <section className=\"my-Buble\">\r\n                <div className=\"bubbles\">\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                    <div className=\"bubble\"></div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HomePage","import {nanoid} from 'nanoid'\r\n\r\n\r\nclass UserModel {\r\n\r\n    constructor (justUser){\r\n\r\n        this.id = justUser.id;\r\n        this.fname = justUser.fname;\r\n        this.lname = justUser.lname;\r\n        this.email = justUser.email;\r\n        this.gender = justUser.gender;\r\n        this.age = justUser.age; \r\n        this.pwd = justUser.pwd;\r\n        this.cond = justUser.cond;\r\n        this.privelage = \"\";\r\n    }\r\n}\r\n\r\nexport default UserModel","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport './painEventComp.css'\r\n\r\nfunction PainEventModal({ addEvent, show, onHide }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (show === false) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n        }\r\n    }, [show]);\r\n\r\n    const createEvent = () => {\r\n        const newEvn = {\r\n            eventDate,\r\n            startT,\r\n            endT: \"\",\r\n            painLoc,\r\n            painTriger,\r\n            painLevel,\r\n            selfT,\r\n            envStatus,\r\n            physHelp: \"\",\r\n            medHelp: \"\",\r\n            otherHelp: \"\"\r\n        }\r\n        addEvent(newEvn);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crate new Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row>\r\n                            <Col className=\"leftPenEvent\">\r\n                                <Form>\r\n                                    <div className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                  \r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                        <Form.Label>Level of the Pain</Form.Label>\r\n                                        <Form.Range min={1} max={10} value={painLevel} onChange={ e => setPainLevel(e.target.value)}></Form.Range>\r\n                                        <p className=\"painLevelText\">{painLevel}</p>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\">\r\n                                <Form>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"createBtn\" onClick={() => createEvent()}>Create Event</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PainEventModal;","import {nanoid} from 'nanoid'\r\n\r\nclass EventModel{\r\n   \r\n  constructor (plainEvent) {\r\n        this.id = nanoid(6);\r\n        this.eventDate = plainEvent.eventDate;\r\n        this.startT = plainEvent.startT;\r\n        this.endT = plainEvent.endT;\r\n        this.painLoc = plainEvent.painLoc;\r\n        this.painTriger = plainEvent.painTriger;\r\n        this.painLevel = plainEvent.painLevel;\r\n        this.selfT = plainEvent.selfT;\r\n        this.envStatus = plainEvent.envStatus; \r\n        this.physHelp = plainEvent.physHelp;\r\n        this.medHelp = plainEvent.medHelp;\r\n        this.otherHelp = plainEvent.otherHelp;\r\n        this.activeUId = plainEvent.activeUId;\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default EventModel","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row, ThemeProvider } from 'react-bootstrap';\r\nimport './eventManageModalComp.css'\r\n\r\nfunction EventManageModalComp({ show, onHide, selectedEvent, saveEvent, manageIndex }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [endT, setEndT] = React.useState(\"\")\r\n    const [medHelp, setMedHelp] = React.useState(\"\")\r\n    const [physHelp, setPhysHelp] = React.useState(\"\")\r\n    const [otherHelp, setOtherHelp] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!show && !selectedEvent) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n            setEndT(\"\")\r\n            setMedHelp(\"\")\r\n            setPhysHelp(\"\")\r\n            setOtherHelp(\"\")\r\n            setPainLevel(\"1\")\r\n        }\r\n    }, [show]);\r\n\r\n    React.useEffect(() => {\r\n        if (selectedEvent) {\r\n            setPainLoc(selectedEvent.painLoc)\r\n            setPainTriger(selectedEvent.painTriger)\r\n            setStartT(selectedEvent.startT)\r\n            setEventDate(selectedEvent.eventDate)\r\n            setSelfT(selectedEvent.selfT)\r\n            setEnvStatus(selectedEvent.envStatus)\r\n            setEndT(selectedEvent.endT)\r\n            setMedHelp(selectedEvent.medHelp)\r\n            setPhysHelp(selectedEvent.physHelp)\r\n            setOtherHelp(selectedEvent.otherHelp)\r\n            setPainLevel(selectedEvent.painLevel)\r\n        }\r\n    }, [selectedEvent])\r\n\r\n    const createEvent = () => {\r\n        const newEvn = {\r\n            // id: selectedEvent.id,\r\n            eventDate,\r\n            startT,\r\n            endT,\r\n            painLoc,\r\n            painTriger,\r\n            selfT,\r\n            envStatus,\r\n            physHelp,\r\n            medHelp,\r\n            otherHelp,\r\n            painLevel\r\n            // activeUId: selectedEvent.activeUId  \r\n        }\r\n        saveEvent(newEvn, manageIndex);\r\n    }\r\n\r\n    return (\r\n        <div className=\"manageModal-cp\">\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"cont-for-adding_manage-event\">\r\n                        Manage Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row className=\"mainRowModal\">\r\n                            <Col className=\"leftPenEvent\" md={5}>\r\n                                <Form>\r\n                                    <Row className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} sm={12} md={5} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={12} md={5} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={12} md={5} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>End Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={endT} onChange={e => setEndT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                            <Form.Label>Level of the Pain</Form.Label>\r\n                                            <Form.Range min={1} max={10} value={painLevel} onChange={e => setPainLevel(e.target.value)}></Form.Range>\r\n                                            <p className=\"painLevelText\">{painLevel}</p>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\" md={6}>\r\n                                <Form>\r\n                                    <h4 className=\"rightPenTitle\">What HELPED</h4>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Medicines: </Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={medHelp} onChange={e => setMedHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Physical: <span className=\"note\">(e.g physicalTheropy ex)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={physHelp} onChange={e => setPhysHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Other: <span className=\"note\">(e.g Mentor, Psychologist etc.)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={otherHelp} onChange={e => setOtherHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                        <Button className=\"cancelBtn\" onClick={() => onHide()}>Cancel</Button>\r\n                        <Button className=\"createBtn\" onClick={() => createEvent()}>Save</Button>\r\n                    </ThemeProvider>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventManageModalComp;","import React from 'react';\r\nimport { Button, Form, Col, Row, ButtonGroup, Container, ThemeProvider } from 'react-bootstrap';\r\nimport './signUpComp.css'\r\n\r\nfunction SignUpComp({ addUser, userActive }) {\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [pwd, setPwd] = React.useState(\"\");\r\n    const [fname, setFname] = React.useState(\"\");\r\n    const [lname, setLname] = React.useState(\"\");\r\n    const [gender, setGender] = React.useState(\"\");\r\n    const [age, setAge] = React.useState(\"\");\r\n    const [cond, setCond] = React.useState(\"\");\r\n\r\n\r\n    const createUser = () => {\r\n        console.log(gender)\r\n        const newUser = {\r\n        fname,\r\n        lname,\r\n        email,\r\n        gender,\r\n        age, \r\n        pwd,\r\n        cond\r\n        }\r\n\r\n        addUser(newUser)\r\n\r\n    }\r\n\r\n       \r\n\r\n    return (\r\n        <div className=\"mainSignup-cp\">\r\n            <Form className=\"formDiv\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicFname\">\r\n                                <Form.Label>First Name :</Form.Label>\r\n                                <Form.Control type=\"input\" placeholder=\"Firt Name\" className=\"textIn\" value={fname}\r\n                                    onChange={(e) => setFname(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicLname\">\r\n                                <Form.Label>Last Name :</Form.Label>\r\n                                <Form.Control type=\"input\" placeholder=\"Last Name\" className=\"textIn\" value={lname}\r\n                                    onChange={(e) => setLname(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicAge\">\r\n                                <Form.Label>Your Age :</Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Age\" className=\"textIn\" value={age}\r\n                                    onChange={(e) => setAge(e.target.value)} min={6} max={120} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicGender\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <ThemeProvider prefixes={{btn : \"my-btn\"}}>\r\n                                    <Button onClick={(e) => (setGender(e.target.value))} value=\"Feamle\">Female</Button>\r\n                                    <Button onClick={(e) => (setGender(e.target.value))} value=\"Male\">Male</Button>\r\n                                    <Button onClick={(e) => (setGender(e.target.value))} value=\"Other\">Other</Button>\r\n                                    </ThemeProvider>\r\n                                </ButtonGroup>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicCond\">\r\n                                <Form.Label>Conditaion :\r\n                                    <span className=\"textInCon\"> (e.g C.F.S, E.D.S, Fibromialgya ect.)</span>\r\n                                </Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} placeholder=\"Conditaion\" className=\"textIn\" value={cond}\r\n                                    onChange={(e) => setCond(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3 me\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" className=\"textIn\" value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" className=\"textIn\" value={pwd}\r\n                                    onChange={(e) => setPwd(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            <div className=\"d-flex justify-content-end btnDiv\">\r\n            <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                <Button  className=\"signupBtn\" onClick={() => createUser()}>Sign-Up</Button>\r\n                <Button  className=\"signupCBtn\">Cancel</Button>\r\n                </ThemeProvider>{' '}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpComp;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport SignUpComp from '../../Components/SignUp-cp/SignUpComp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './signUpPage.css'\r\n\r\nfunction SignUpPage({addUser, userActive}) {\r\n\r\n    if(userActive){\r\n       return <Redirect to=\"/diarys\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"signUpMain-p\">\r\n            <SignUpComp addUser={addUser} userActive={userActive}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport CardComp from '../../Components/cardHome-cp/CardComp';\r\nimport './aboutPage.css'\r\n\r\nfunction AboutPage() {\r\n    return (\r\n        <div className=\"about-p\">\r\n            <h1>About Us</h1>\r\n            <Row className=\"cardsDiv\">\r\n                <Col md={4} className=\"colMd\"> \r\n                    <CardComp className=\"aboutCard\" imgSrc=\"https://static.thenounproject.com/png/3968708-200.png\"\r\n                        titel=\"Physical\" text=\"The physical pain is reale and you can feel it some where in your body\" animation=\"cardDivAni\" />\r\n                </Col>\r\n                <Col md={4} className=\"colMd\">\r\n                    <CardComp className=\"aboutCard\" imgSrc=\"https://image.flaticon.com/icons/png/128/2176/2176875.png\"\r\n                        titel=\"Psychological\" text=\"We are what we think our thogut affect our life\" animation=\"cardDivAni\" />\r\n                </Col>\r\n                <Col md={4} className=\"colMd\">\r\n                    <CardComp className=\"aboutCard\" imgSrc=\"https://image.flaticon.com/icons/png/128/2821/2821176.png\"\r\n                        titel=\"Environmental\" text=\"How the Environment is reacting is part of what we think about our self\" animation=\"cardDivAni\" />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { Button, Form, ThemeProvider } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './loginPage.css';\r\n\r\nfunction LoginPage({ users, login, userActive }) {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [userPwd, setUserPwd] = React.useState(\"\");\r\n\r\n\r\n\r\n    function loginB() {\r\n        const newUserActive = users.find(user => user.email === email && user.pwd === userPwd)\r\n        if (newUserActive) {\r\n            console.log(newUserActive)\r\n            login(newUserActive)\r\n        }\r\n    }\r\n\r\n    function redair(){\r\n        return <Redirect to=\"/sign-up\"/>\r\n    }\r\n\r\n    if(userActive){\r\n        return <Redirect to=\"/diarys\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-p\">\r\n            <h1>Login to your Dairy</h1>\r\n            <p className=\"signupText\">or <Link to=\"/sign-up\">you can Signup here</Link> to start creating your own</p>\r\n            <Form>\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" className=\"textIn\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted emailText\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" className=\"textIn\" value={userPwd} onChange={(e) => setUserPwd(e.target.value)} />\r\n                </Form.Group>\r\n                <div className=\"loginSignup\">\r\n                <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                    <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={loginB}>\r\n                        LOG-IN\r\n                    </Button> \r\n                    <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={redair}>\r\n                        SIGN-UP\r\n                    </Button>\r\n                    </ThemeProvider>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport { Switch, Route, HashRouter, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport NavbarComp from './Components/Nav-cp/Navbar';\nimport DairyPage from './pages/DiarysPage/DiaryPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport userData from './Data/UserData.json';\nimport UserModel from './model/UserModel';\nimport PainEventModal from './Components/painEventModal-cp/PainEventModal';\nimport EventData from './Data/EventData.json';\nimport EventModel from './model/EventModel.js';\nimport EventManageModalComp from './Components/eventManageModal-cp/EventManageModalComp';\nimport SignUpPage from './pages/sign-upPage/SignUpPage';\nimport {nanoid} from 'nanoid';\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport LoginPage from './pages/LoginPage/LoginPage';\n\nfunction App() {\n\n  const [users, setUsers] = React.useState(userData.map(justUser => new UserModel(justUser)));\n  const [userActive, setUserActive] = React.useState(null);\n  const [showOrNot, setShowOrNot] = React.useState(false);\n  const [manageShowOrNot, setManageShowOrNot] = React.useState(false);\n  const [events, setEvents] = React.useState(EventData.map( plainEvent => new EventModel(plainEvent)))\n  const [selectedEvent, setSelectedEvent] = React.useState(null)\n  const [manageIndex, setManageIndex] = React.useState(null)\n\n  const userActiveEvents = userActive ? events.filter(plainEvent => plainEvent.activeUId === userActive.id) : [] ;\n\n  function addEvent(newEvent) {\n    const activeUId = userActive ? userActive.id : null ;\n    newEvent.activeUId = activeUId;\n    const evnId = nanoid(6);\n    newEvent.id = evnId;\n    newEvent = new EventModel(newEvent);\n    console.log(newEvent);\n    setEvents(events.concat(newEvent));\n    setShowOrNot(false);\n  }\n\n  function addUser(newUser) {\n    const uId = nanoid(6);\n    newUser.id = uId;\n    newUser = new UserModel(newUser);\n    setUsers(users.concat(newUser));\n    console.log(users)\n    setUserActive(newUser)\n  }\n\n  \n\n  const  saveEvent = (newSaveEvent, index) => {\n\n    console.log(\"seve event\", index)\n    const activeUId = userActive ? userActive.id : null ;\n    newSaveEvent.activeUId = activeUId;\n    newSaveEvent = new EventModel(newSaveEvent);\n    // console.log(\"debug for manage Event : \" + newSaveEvent)\n    debugger\n    const newEvents = [...events];\n    newEvents[index] = newSaveEvent;\n    // newEvents.splice(index, 1, newSaveEvent)\n    // console.log( \"debug 2 for Manage Event\" + newEvents)\n    setManageShowOrNot(false);\n    setEvents(newEvents)\n    setSelectedEvent(\"\")\n    setManageIndex(\"\")\n  }\n\n  const handelCloseModal = () => {\n    setSelectedEvent(null)\n    setManageShowOrNot(false)\n}\n\n\n  function login(newUserActive) {\n    console.log(newUserActive);\n    setUserActive(newUserActive);\n  }\n\n  function logOut() {\n    setUserActive(null)\n  }\n\n  return (\n    <HashRouter>\n      <NavbarComp  userActive={userActive} logOut={logOut} setShowOrNot={setShowOrNot}/>\n      <PainEventModal show={showOrNot} onHide={() => setShowOrNot(false)} addEvent={addEvent}  />\n      <EventManageModalComp show={manageShowOrNot} onHide={() => handelCloseModal()} selectedEvent={selectedEvent} saveEvent={saveEvent}  manageIndex={manageIndex}/>\n      <Switch>\n        <Route exact path=\"/\"><HomePage users={users} login={login} userActive={userActive}/></Route>\n        <Route exact path=\"/diarys\"><DairyPage userActvie={userActive} setShowOrNot={setShowOrNot} events={userActiveEvents} setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} selectedEvent={selectedEvent} setManageIndex={setManageIndex}/></Route>\n         <Route exact path=\"/sign-up\"><SignUpPage addUser={addUser} userActive={userActive}/> </Route>\n         <Route exact path=\"/about\"><AboutPage/></Route>\n         <Route exact path=\"/log-in\"><LoginPage users={users} login={login} userActive={userActive}/></Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}