{"version":3,"sources":["Components/Nav-cp/Navbar.jsx","Components/painDiary-cp/PainDiaryComp.jsx","pages/DiarysPage/DiaryPage.jsx","Components/Login-cp/LoginComp.jsx","Components/cardHome-cp/CardComp.jsx","pages/HomePage/HomePage.jsx","model/UserModel.js","Components/painEventModal-cp/PainEventModal.jsx","model/EventModel.js","Components/eventManageModal-cp/EventManageModalComp.jsx","Components/SignUp-cp/SignUpComp.jsx","pages/sign-upPage/SignUpPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavbarComp","userActive","logOut","setShowOrNot","Navbar","bg","expand","className","Container","Toggle","Collapse","id","Nav","Link","as","to","NavDropdown","title","Item","Button","onClick","disabled","Brand","href","PainDairyComp","events","setSelectedEvent","setManageShowOrNot","selectedEvent","setManageIndex","map","event","index","eventToModal","Col","eventDate","startT","endT","painLoc","painLevel","md","selfT","painTriger","physHelp","medHelp","otherHelp","ThemeProvider","prefixes","btn","variant","DairyPage","userActvie","console","log","class","LoginComp","users","login","React","useState","email","setEmail","userPwd","setUserPwd","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","newUserActive","find","user","pwd","CardComp","imgSrc","titel","text","src","alt","HomePage","UserModel","justUser","this","fname","lname","gender","age","cond","privelage","PainEventModal","addEvent","show","onHide","setPainLoc","setPainTriger","setStartT","setEventDate","setSelfT","envStatus","setEnvStatus","setPainLevel","useEffect","Modal","size","centered","Header","closeButton","Title","Body","Row","rows","Range","min","max","Footer","EventModel","plainEvent","nanoid","activeUId","EventManageModalComp","saveEvent","manageIndex","setEndT","setMedHelp","setPhysHelp","setOtherHelp","sm","SignUpComp","addUser","setPwd","setFname","setLname","setAge","setCond","ButtonGroup","SignUpPage","App","userData","setUsers","setUserActive","showOrNot","manageShowOrNot","EventData","setEvents","userActiveEvents","filter","newEvent","evnId","concat","newSaveEvent","newEvents","exact","path","newUser","uId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9d7c695.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav, NavDropdown, Button, ThemeProvider } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css'\r\n\r\nfunction NavbarComp({ userActive, logOut, setShowOrNot }) {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"md\" className=\"mainNav\">\r\n            <Container>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                        <NavDropdown title=\"Dairy\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item as={Link} to=\"/diarys\">All Events</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Button} onClick={() => setShowOrNot(true)} disabled={!userActive}>Create Event</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Link} to=\"/recommendation\"  disabled={!userActive}>Recommendations</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link as={Link} to=\"/admin\">About</Nav.Link>\r\n                    </Nav>\r\n                    { userActive ? <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/\" onClick={logOut}>Log-Out</Nav.Link>\r\n                    </Nav></> : <><Nav className=\"ms-auto\">\r\n                        <Nav.Link as={Link} to=\"/\">Log-In</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/sign-up\">Sign-Up</Nav.Link>\r\n                    </Nav></>}\r\n\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            <Navbar.Brand href=\"#/\">Pain diary</Navbar.Brand>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavbarComp;","import React from 'react';\r\nimport { Col, Row, Button, ThemeProvider } from 'react-bootstrap';\r\nimport './painDiary.css'\r\n\r\n\r\n\r\n\r\nfunction PainDairyComp({ events, userActive, setShowOrNot, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n\r\n\r\n    //function that get the selected event from the list and will open it in the modal for editing\r\n    function eventToModal(selectedEvent, index) {\r\n        setSelectedEvent(selectedEvent);\r\n        setManageIndex(index);\r\n    }\r\n\r\n    function manageClick() {\r\n        // setSelectedEvent(inSelected);\r\n        setManageShowOrNot(true);\r\n    }\r\n   \r\n    const selectedClass = \"\"\r\n\r\n    return (\r\n        <div>\r\n            {events.map((event, index) =>\r\n            <div className={event === selectedEvent ? \"mainDairyComp selectedClass\" : \"mainDairyComp\"} key={event.id} onClick={() => eventToModal(event, index)}>\r\n                <Col>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Day of Event:</h6>\r\n                        <p className=\"innerText\">{event.eventDate}</p>\r\n                        <h6>Start Time:</h6>\r\n                        <p>{event.startT}</p>\r\n                        {event.endT !== \"\" ? <><h6>End Time:</h6>\r\n                            <p>{event.endT}</p></> : null}\r\n                    </div>\r\n                    <div className=\"colDiv\">\r\n                        <h6>Place of the Pain:</h6>\r\n                        <p>{event.painLoc}</p>\r\n                        <h6>Pain Level:</h6>\r\n                        <p>{event.painLevel}</p>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>Self Thoughts:</h6>\r\n                    <p>{event.selfT} </p>\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>Physical Trigger:</h6>\r\n                    <p>{event.painTriger}</p>\r\n                </Col>\r\n                <Col md={2} className=\"painDcol\">\r\n                    <h6>What Helped:</h6>\r\n                    <p> <span>{event.physHelp ? <>Physical: {event.physHelp} </> : null}</span> <span>{event.medHelp ? <>Meds:  {event.medHelp} </> : null}  </span>  <span>{event.otherHelp ? <> Other:  {event.otherHelp} </> : null}  </span></p>\r\n                </Col>\r\n            </div>)}\r\n            <div className=\"eventsBtns\">\r\n            <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                <Button variant=\"success\" onClick={() => setShowOrNot(true)}>Create new Event</Button>\r\n                <Button variant=\"success\" disabled={!selectedEvent} onClick={() => manageClick()}>Manage Event</Button>\r\n                <Button variant=\"success\">Sheare Event</Button>\r\n                </ThemeProvider>{' '}\r\n            </div>\r\n        </div>\r\n            );\r\n}\r\n\r\nexport default PainDairyComp;","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport PainDairyComp from '../../Components/painDiary-cp/PainDiaryComp';\r\nimport './diaryPage.css'\r\n\r\nfunction DairyPage({ userActvie, setShowOrNot, events, setSelectedEvent, setManageShowOrNot, selectedEvent, setManageIndex }) {\r\n    console.log(userActvie)\r\n\r\n\r\n    // if (!userActvie) {\r\n    //     return <Redirect to=\"/\" />\r\n    // }\r\n\r\n    console.log(events);\r\n\r\n    if(!userActvie){\r\n      return   <Redirect to=\"/\"/>\r\n    }\r\n\r\n    // const hours = new Date().getHours(); \r\n    // const min = new Date().getMinutes();\r\n    // const currentTime = hours + \":\" + min\r\n    // console.log(currentTime)\r\n\r\n\r\n    return (\r\n        <div className=\"diaryMain-p\">\r\n            <h1>Diary Page</h1>\r\n            <PainDairyComp events={events} userActvie={userActvie} setShowOrNot={setShowOrNot}\r\n                setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} \r\n                selectedEvent={selectedEvent} setManageIndex={setManageIndex} />  \r\n                 <section class=\"sticky\">\r\n                <div class=\"bubbles\">\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                </div>\r\n            </section>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DairyPage;","import React from 'react';\r\nimport { Button, Form, ThemeProvider } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './loginComp.css';\r\n\r\nfunction LoginComp({ users, login, userActive }) {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [userPwd, setUserPwd] = React.useState(\"\");\r\n\r\n\r\n\r\n    function loginB() {\r\n        const newUserActive = users.find(user => user.email === email && user.pwd === userPwd)\r\n        if (newUserActive) {\r\n            console.log(newUserActive)\r\n            login(newUserActive)\r\n        }\r\n    }\r\n\r\n    function redair(){\r\n        return <Redirect to=\"/sign-up\"/>\r\n    }\r\n\r\n    if(userActive){\r\n        return <Redirect to=\"/diarys\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-cp\">\r\n            <h4>Login to your Dairy</h4>\r\n            <p className=\"signupText\">or <Link to=\"/sign-up\">you can Signup here</Link> to start creating your own</p>\r\n            <Form>\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" className=\"textIn\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted emailText\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"sm-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" className=\"textIn\" value={userPwd} onChange={(e) => setUserPwd(e.target.value)} />\r\n                </Form.Group>\r\n                <div className=\"loginSignup\">\r\n                <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                    <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={loginB}>\r\n                        LOG-IN\r\n                    </Button> \r\n                    <Button variant=\"success\" className=\"buttonBg\" type=\"button\" onClick={redair}>\r\n                        SIGN-UP\r\n                    </Button>\r\n                    </ThemeProvider>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginComp;","import React from 'react';\r\nimport './cardComp.css'\r\n\r\nfunction CardComp({imgSrc, titel, text}) {\r\n    return (\r\n        <div className=\"cardDiv\">\r\n            <img className=\"cardImg\" src={imgSrc} alt=\"headace\" />\r\n            <h5>{titel}</h5>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardComp;","import React from 'react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LoginComp from '../../Components/Login-cp/LoginComp';\r\nimport CardComp from '../../Components/cardHome-cp/CardComp';\r\nimport './homePage.css'\r\nimport BackgroundComp from '../../Components/background-cp/BackgroundComp';\r\n\r\n\r\n\r\n\r\nfunction HomePage({ users, login, userActive }) {\r\n\r\n\r\n    return (\r\n        <div className=\"home-p\">\r\n            <h1>Pain Diary</h1>\r\n            <div className=\"cardsDiv\">\r\n                <CardComp imgSrc=\"https://static.thenounproject.com/png/3968708-200.png\" titel=\"Physical\" text=\"The physical pain is reale and you can feel it some where in your body\" />\r\n                <CardComp imgSrc=\"https://i.dlpng.com/static/png/6331675_preview.png\" titel=\"Psychological\" text=\"We are what we think our thogut affect our life\"/>\r\n                <CardComp imgSrc=\"https://image.flaticon.com/icons/png/128/2821/2821176.png\" titel=\"Environmental\" text=\"How the Environment is reacting is part of what we think about our self\"/>\r\n            </div>\r\n            <div className=\"login-div\">\r\n                {!userActive ? <LoginComp users={users} login={login} userActive={userActive} /> : null}\r\n            </div>\r\n            <section class=\"my-Buble\">\r\n                <div class=\"bubbles\">\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HomePage","import {nanoid} from 'nanoid'\r\n\r\n\r\nclass UserModel {\r\n\r\n    constructor (justUser){\r\n\r\n        this.id = justUser.id;\r\n        this.fname = justUser.fname;\r\n        this.lname = justUser.lname;\r\n        this.email = justUser.email;\r\n        this.gender = justUser.gender;\r\n        this.age = justUser.age; \r\n        this.pwd = justUser.pwd;\r\n        this.cond = justUser.cond;\r\n        this.privelage = \"\";\r\n    }\r\n}\r\n\r\nexport default UserModel","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport './painEventComp.css'\r\n\r\nfunction PainEventModal({ addEvent, show, onHide }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (show === false) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n        }\r\n    }, [show]);\r\n\r\n    const createEvent = () => {\r\n        const newEvn = {\r\n            eventDate,\r\n            startT,\r\n            endT: \"\",\r\n            painLoc,\r\n            painTriger,\r\n            painLevel,\r\n            selfT,\r\n            envStatus,\r\n            physHelp: \"\",\r\n            medHelp: \"\",\r\n            otherHelp: \"\"\r\n        }\r\n        addEvent(newEvn);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Crate new Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row>\r\n                            <Col className=\"leftPenEvent\">\r\n                                <Form>\r\n                                    <div className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                  \r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                        <Form.Label>Level of the Pain</Form.Label>\r\n                                        <Form.Range min={1} max={10} value={painLevel} onChange={ e => setPainLevel(e.target.value)}></Form.Range>\r\n                                        <p className=\"painLevelText\">{painLevel}</p>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\">\r\n                                <Form>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"createBtn\" onClick={() => createEvent()}>Create Event</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PainEventModal;","import {nanoid} from 'nanoid'\r\n\r\nclass EventModel{\r\n   \r\n  constructor (plainEvent) {\r\n        this.id = nanoid(6);\r\n        this.eventDate = plainEvent.eventDate;\r\n        this.startT = plainEvent.startT;\r\n        this.endT = plainEvent.endT;\r\n        this.painLoc = plainEvent.painLoc;\r\n        this.painTriger = plainEvent.painTriger;\r\n        this.painLevel = plainEvent.painLevel;\r\n        this.selfT = plainEvent.selfT;\r\n        this.envStatus = plainEvent.envStatus; \r\n        this.physHelp = plainEvent.physHelp;\r\n        this.medHelp = plainEvent.medHelp;\r\n        this.otherHelp = plainEvent.otherHelp;\r\n        this.activeUId = plainEvent.activeUId;\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default EventModel","import React from 'react';\r\nimport { Button, Col, Form, Modal, Row, ThemeProvider } from 'react-bootstrap';\r\nimport './eventManageModalComp.css'\r\n\r\nfunction EventManageModalComp({ show, onHide, selectedEvent, saveEvent, manageIndex }) {\r\n\r\n    const [painLoc, setPainLoc] = React.useState(\"\");\r\n    const [painTriger, setPainTriger] = React.useState(\"\");\r\n    const [startT, setStartT] = React.useState(\"\");\r\n    const [eventDate, setEventDate] = React.useState(\"\")\r\n    const [selfT, setSelfT] = React.useState(\"\")\r\n    const [envStatus, setEnvStatus] = React.useState(\"\")\r\n    const [endT, setEndT] = React.useState(\"\")\r\n    const [medHelp, setMedHelp] = React.useState(\"\")\r\n    const [physHelp, setPhysHelp] = React.useState(\"\")\r\n    const [otherHelp, setOtherHelp] = React.useState(\"\")\r\n    const [painLevel, setPainLevel] = React.useState(\"1\")\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (!show && !selectedEvent) {\r\n            setPainLoc(\"\")\r\n            setPainTriger(\"\")\r\n            setStartT(\"\")\r\n            setEventDate(\"\")\r\n            setSelfT(\"\")\r\n            setEnvStatus(\"\")\r\n            setEndT(\"\")\r\n            setMedHelp(\"\")\r\n            setPhysHelp(\"\")\r\n            setOtherHelp(\"\")\r\n            setPainLevel(\"1\")\r\n        }\r\n    }, [show]);\r\n\r\n    React.useEffect(() => {\r\n        if (selectedEvent) {\r\n            setPainLoc(selectedEvent.painLoc)\r\n            setPainTriger(selectedEvent.painTriger)\r\n            setStartT(selectedEvent.startT)\r\n            setEventDate(selectedEvent.eventDate)\r\n            setSelfT(selectedEvent.selfT)\r\n            setEnvStatus(selectedEvent.envStatus)\r\n            setEndT(selectedEvent.endT)\r\n            setMedHelp(selectedEvent.medHelp)\r\n            setPhysHelp(selectedEvent.physHelp)\r\n            setOtherHelp(selectedEvent.otherHelp)\r\n            setPainLevel(selectedEvent.painLevel)\r\n        }\r\n    }, [selectedEvent])\r\n\r\n    const createEvent = () => {\r\n        const newEvn = {\r\n            // id: selectedEvent.id,\r\n            eventDate,\r\n            startT,\r\n            endT,\r\n            painLoc,\r\n            painTriger,\r\n            selfT,\r\n            envStatus,\r\n            physHelp,\r\n            medHelp,\r\n            otherHelp,\r\n            painLevel\r\n            // activeUId: selectedEvent.activeUId  \r\n        }\r\n        saveEvent(newEvn, manageIndex);\r\n    }\r\n\r\n    return (\r\n        <div className=\"manageModal-cp\">\r\n            <Modal show={show} onHide={onHide} size=\"xl\" aria-labelledby=\"cont-for-adding_manage-event\" centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"cont-for-adding_manage-event\">\r\n                        Manage Event\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"eventDiv-cp\">\r\n                        <Row className=\"mainRowModal\">\r\n                            <Col className=\"leftPenEvent\" md={5}>\r\n                                <Form>\r\n                                    <Row className=\"mb-3 dateTimeRow\">\r\n                                        <Form.Group as={Col} sm={4} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Date of Event</Form.Label>\r\n                                            <Form.Control type=\"date\" className=\"dateTime\" value={eventDate} onChange={e => setEventDate(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={4} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>Start Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={startT} onChange={e => setStartT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm={4} controlId=\"formPainEventStartT:\" className=\"dateTimeInput\">\r\n                                            <Form.Label>End Time:</Form.Label>\r\n                                            <Form.Control type=\"time\" className=\"dateTime\" value={endT} onChange={e => setEndT(e.target.value)} ></Form.Control>\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventLoc\">\r\n                                        <Form.Label>Location of the Pain</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painLoc} onChange={e => setPainLoc(e.target.value)} ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventTrigger:\">\r\n                                        <Form.Label>Physical Trigger:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={painTriger} onChange={e => setPainTriger(e.target.value)}></Form.Control>\r\n                                        <div className=\"myRange\">\r\n                                            <Form.Label>Level of the Pain</Form.Label>\r\n                                            <Form.Range min={1} max={10} value={painLevel} onChange={e => setPainLevel(e.target.value)}></Form.Range>\r\n                                            <p className=\"painLevelText\">{painLevel}</p>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Self Thoughts:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={selfT} onChange={e => setSelfT(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Environment Status:</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={2} className=\"textarea\" value={envStatus} onChange={e => setEnvStatus(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col className=\"rightPenEvent\" md={6}>\r\n                                <Form>\r\n                                    <h4 className=\"rightPenTitle\">What HELPED</h4>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Medicines: </Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={medHelp} onChange={e => setMedHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Physical: <span className=\"note\">(e.g physicalTheropy ex)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={physHelp} onChange={e => setPhysHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPainEventSelfT\">\r\n                                        <Form.Label>Other: <span className=\"note\">(e.g Mentor, Psychologist etc.)</span></Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} className=\"textarea\" value={otherHelp} onChange={e => setOtherHelp(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                        <Button className=\"cancelBtn\" onClick={() => onHide()}>Cancel</Button>\r\n                        <Button className=\"createBtn\" onClick={() => createEvent()}>Save</Button>\r\n                    </ThemeProvider>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventManageModalComp;","import React from 'react';\r\nimport { Button, Form, Col, Row, ButtonGroup, Container, ThemeProvider } from 'react-bootstrap';\r\nimport './signUpComp.css'\r\n\r\nfunction SignUpComp({ addUser, userActive }) {\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [pwd, setPwd] = React.useState(\"\");\r\n    const [fname, setFname] = React.useState(\"\");\r\n    const [lname, setLname] = React.useState(\"\");\r\n    const [gender, setGender] = React.useState(\"\");\r\n    const [age, setAge] = React.useState(\"\");\r\n    const [cond, setCond] = React.useState(\"\");\r\n\r\n\r\n    const createUser = () => {\r\n\r\n        const newUser = {\r\n        fname,\r\n        lname,\r\n        email,\r\n        gender,\r\n        age, \r\n        pwd,\r\n        cond\r\n        }\r\n\r\n        addUser(newUser)\r\n\r\n    }\r\n\r\n       \r\n\r\n    return (\r\n        <div className=\"mainSignup-cp\">\r\n            <Form className=\"formDiv\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicFname\">\r\n                                <Form.Label>First Name :</Form.Label>\r\n                                <Form.Control type=\"input\" placeholder=\"Firt Name\" className=\"textIn\" value={fname}\r\n                                    onChange={(e) => setFname(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicLname\">\r\n                                <Form.Label>Last Name :</Form.Label>\r\n                                <Form.Control type=\"input\" placeholder=\"Last Name\" className=\"textIn\" value={lname}\r\n                                    onChange={(e) => setLname(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicAge\">\r\n                                <Form.Label>Your Age :</Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Age\" className=\"textIn\" value={age}\r\n                                    onChange={(e) => setAge(e.target.value)} min={6} max={120} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicGender\">\r\n                                <ButtonGroup size=\"sm\">\r\n                                    <Button>Female</Button>\r\n                                    <Button>Male</Button>\r\n                                    <Button>Other</Button>\r\n                                </ButtonGroup>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicCond\">\r\n                                <Form.Label>Conditaion :\r\n                                    <span className=\"textInCon\"> (e.g C.F.S, E.D.S, Fibromialgya ect.)</span>\r\n                                </Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} placeholder=\"Conditaion\" className=\"textIn\" value={cond}\r\n                                    onChange={(e) => setCond(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"sm-3 me\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" className=\"textIn\" value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"sm-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" className=\"textIn\" value={pwd}\r\n                                    onChange={(e) => setPwd(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            <div className=\"d-flex justify-content-end btnDiv\">\r\n            <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n                <Button  className=\"signupBtn\" onClick={() => createUser()}>Sign-Up</Button>\r\n                <Button  className=\"signupCBtn\">Cancel</Button>\r\n                </ThemeProvider>{' '}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpComp;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport SignUpComp from '../../Components/SignUp-cp/SignUpComp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './signUpPage.css'\r\n\r\nfunction SignUpPage({addUser, userActive}) {\r\n\r\n    if(userActive){\r\n       return <Redirect to=\"/diarys\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"signUpMain-p\">\r\n            <SignUpComp addUser={addUser} userActive={userActive}/>\r\n             <section class=\"sticky\">\r\n                <div class=\"bubbles\">\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                    <div class=\"bubble\"></div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage","import React from 'react';\nimport { Switch, Route, HashRouter, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport NavbarComp from './Components/Nav-cp/Navbar';\nimport DairyPage from './pages/DiarysPage/DiaryPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport userData from './Data/UserData.json';\nimport UserModel from './model/UserModel';\nimport PainEventModal from './Components/painEventModal-cp/PainEventModal';\nimport EventData from './Data/EventData.json';\nimport EventModel from './model/EventModel.js';\nimport EventManageModalComp from './Components/eventManageModal-cp/EventManageModalComp';\nimport SignUpPage from './pages/sign-upPage/SignUpPage';\nimport {nanoid} from 'nanoid';\n\nfunction App() {\n\n  const [users, setUsers] = React.useState(userData.map(justUser => new UserModel(justUser)));\n  const [userActive, setUserActive] = React.useState(null);\n  const [showOrNot, setShowOrNot] = React.useState(false);\n  const [manageShowOrNot, setManageShowOrNot] = React.useState(false);\n  const [events, setEvents] = React.useState(EventData.map( plainEvent => new EventModel(plainEvent)))\n  const [selectedEvent, setSelectedEvent] = React.useState(null)\n  const [manageIndex, setManageIndex] = React.useState(null)\n\n  const userActiveEvents = userActive ? events.filter(plainEvent => plainEvent.activeUId === userActive.id) : [] ;\n\n  function addEvent(newEvent) {\n    const activeUId = userActive ? userActive.id : null ;\n    newEvent.activeUId = activeUId;\n    const evnId = nanoid(6);\n    newEvent.id = evnId;\n    newEvent = new EventModel(newEvent);\n    console.log(newEvent);\n    setEvents(events.concat(newEvent));\n    setShowOrNot(false);\n  }\n\n  function addUser(newUser) {\n    const uId = nanoid(6);\n    newUser.id = uId;\n    newUser = new UserModel(newUser);\n    setUsers(users.concat(newUser));\n    console.log(users)\n    setUserActive(newUser)\n  }\n\n  \n\n  const  saveEvent = (newSaveEvent, index) => {\n\n    console.log(\"seve event\", index)\n    const activeUId = userActive ? userActive.id : null ;\n    newSaveEvent.activeUId = activeUId;\n    newSaveEvent = new EventModel(newSaveEvent);\n    // console.log(\"debug for manage Event : \" + newSaveEvent)\n    debugger\n    const newEvents = [...events];\n    newEvents[index] = newSaveEvent;\n    // newEvents.splice(index, 1, newSaveEvent)\n    // console.log( \"debug 2 for Manage Event\" + newEvents)\n    setManageShowOrNot(false);\n    setEvents(newEvents)\n    setSelectedEvent(\"\")\n    setManageIndex(\"\")\n  }\n\n  const handelCloseModal = () => {\n    setSelectedEvent(null)\n    setManageShowOrNot(false)\n}\n\n\n  function login(newUserActive) {\n    console.log(newUserActive);\n    setUserActive(newUserActive);\n  }\n\n  function logOut() {\n    setUserActive(null)\n  }\n\n  return (\n    <HashRouter>\n      <NavbarComp  userActive={userActive} logOut={logOut} setShowOrNot={setShowOrNot}/>\n      <PainEventModal show={showOrNot} onHide={() => setShowOrNot(false)} addEvent={addEvent}  />\n      <EventManageModalComp show={manageShowOrNot} onHide={() => handelCloseModal()} selectedEvent={selectedEvent} saveEvent={saveEvent}  manageIndex={manageIndex}/>\n      <Switch>\n        <Route exact path=\"/\"><HomePage users={users} login={login} userActive={userActive}/></Route>\n        <Route exact path=\"/diarys\"><DairyPage userActvie={userActive} setShowOrNot={setShowOrNot} events={userActiveEvents} setSelectedEvent={setSelectedEvent} setManageShowOrNot={setManageShowOrNot} selectedEvent={selectedEvent} setManageIndex={setManageIndex}/></Route>\n         <Route exact path=\"/sign-up\"><SignUpPage addUser={addUser} userActive={userActive}/> </Route>\n      </Switch>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}